\section{Introduction}

	Ce rapport de projet traîtera du jeu EraDUCKation. 
Ce jeu a été inspiré par l'un des énnoncés proposés :
 \textit{la vie dans un labyrinthe}, qui consistait à générer automatiquement
 un labyrinthe dans lequel des insectes devront évoluer. Les règles étaient 
simples: les règles de reproductions étaient similaires au \textit{jeu de la vie}
 vu en cours, il fallit y intégrer des déplacements semi-aléatoires pour 
les insectes, ainsi qu'une notion de nourriture, et des statistiques sur 
la population. Cependant, comme pour le \textit{jeu de la vie} vu en cours, nous
trouvions que ce projet avait trop peu d'interraction, et avons donc décidé 
d'en faire un jeu. Nous avons préféré passer sur des canard par pur intérêts 
personnels, c'était un moyen de mettre une touche de "nous" dans ce projet, 
en plus de notre modification en jeu d'un programme qui était comme dit précédemment 
sans interraction avec son utilisateur.Nous devions donc créer un jeu basé sur 
\textit{la vie dans un labyrinthe}, en modifiant les condition d'accouplement, 
en integrant des déplacement se basant sur la vue (ou non) d'un partenaire 
de reproduction ou de nourriture, nous devions créer un mode solo, un multi sur 
un même écran, un multi en réseau LAN, ainsi que trois modes de difficultés : 
facile, intermédiaire 
et difficile. Le programme devait aussi disposer d'une interface graphique. 
Nous devions bien entendu implémenter ce qui devait l'être pour 
\textit{la vie dans un labyrinthe}. Le principe du jeu est simple, vous êtes un 
dieu, et devez sélectionner des évènements qui influeront sur la vie de 
vos petits protégés, les mignons petits canards, en bien ou en mal. le but est de 
faire survivre une colonie de canards 100 générations, cependant les évènements 
seront là pour aider ou bloquer le joueur.

Nous avons réalisé ce projet dans le but 
de le rendre en temps que projet de fin d'année de seconde année de 
licence informatique mais aussi afin de le présenter lors d'une soutenance.





\section{Résultats}

	Nous sommes parvenus à remplir toutes les fonctionnalités imposées,
telles que la sauvegarde, et donc le chargement d une partie, mais aussi la
génération aléatoire d'un labyrinthe, le jeu en mode solo et en multi-joueurs, 
les évènements aléatoires (même si le joueur choisi, il choisi entre des 
évènements aléatoires), la gestion de nourriture, notre propre système de 
reproduction basé sur la nourriture que possède un canard, un déplacement priorisant
la reproduction, puis la nourriture si le canard en a besoin, ou si il ne voit rien, 
une decision aléatoire.
















